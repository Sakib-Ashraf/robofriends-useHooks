{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundary.js","components/SearchBar.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","width","height","src","alt","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","SearchBar","searchChange","type","placeholder","onChange","App","useState","setRobots","searchBox","setSearchBox","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,MAAM,MAAMC,OAAO,MAAMC,IAAG,+BAA0BJ,GAAMK,IAAI,cACrE,gCACI,6BAAKP,IACL,4BAAIC,WCeLO,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACA,8BAEYA,EAAOC,KAAI,SAACC,EAAMC,GAC1B,OACI,cAAC,EAAD,CAEIV,GAAIO,EAAOG,GAAGV,GACdF,KAAMS,EAAOG,GAAGZ,KAChBC,MAAOQ,EAAOG,GAAGX,OAHZW,SCDNC,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBZ,OAAQ,SAArE,SACMS,EAAMI,Y,4BCiBLC,E,kDAnBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,UAAW,GAHA,E,qDAMnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CACVJ,UAAW,M,oBAInB,WACI,OAAOG,KAAKJ,MAAMC,SACd,sEACAG,KAAKV,MAAMI,a,GAhBKQ,aCYbC,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKzB,UAAU,MAAf,SACI,uBAAOA,UAAU,mCACjB0B,KAAK,SACLC,YAAY,gBACZC,SAAUH,OC+BPI,G,MAhCH,WACV,MAA4BC,mBAAS,IAArC,mBAAOxB,EAAP,KAAeyB,EAAf,KACA,EAAkCD,mBAAS,IAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIR,EAAUQ,QAC1B,IAEH,IAIMC,EAAiBlC,EAAOmC,QAAO,SAACC,GACpC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAUW,kBAErD,OAAQrC,EAAOuC,OAGb,sBAAK7C,UAAU,KAAf,UACE,oBAAIA,UAAU,gBAAd,yBACA,cAAC,EAAD,CAAWyB,aAZQ,SAACqB,GACtBb,EAAaa,EAAMC,OAAOC,UAYxB,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1C,OAAQkC,WAPxB,gDCbWS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.82a3ccfa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img width=\"200\" height=\"200\" src={`https://robohash.org/${id}`} alt=\"robot-pic\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n    return (\r\n    <div>\r\n            {\r\n                robots.map((user, i) => {\r\n        return (\r\n            <Card\r\n                key={i}\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}\r\n            />\r\n        );\r\n    })\r\n        }\r\n    </div>\r\n        );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n            { props.children }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError : false,\r\n        }\r\n    }\r\n    componentDidCatch(error, info) {\r\n        this.setState({\r\n            hasError : true,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return this.state.hasError ?\r\n            <h1>ooopsy doopsy.... something is wrong</h1> :\r\n            this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from \"react\";\r\n\r\nconst SearchBar = ({searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\" \r\n            type=\"search\" \r\n            placeholder=\"Search Robots\"\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React, { useState, useEffect } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [robots, setRobots] = useState([]);\r\n  const [searchBox, setSearchBox] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(response => response.json())\r\n      .then(users => setRobots(users));\r\n  }, []);\r\n\r\n  const onSearchChange = (event) => {\r\n    setSearchBox(event.target.value );\r\n  };\r\n\r\n  const filteredRobots = robots.filter((robot) => {\r\n    return robot.name.toLowerCase().includes(searchBox.toLowerCase());\r\n  });\r\n  return !robots.length ? (\r\n    <h1> loading... </h1>\r\n  ) : (\r\n    <div className=\"tc\">\r\n      <h1 className=\"f1 pa2 ma2 tc\">robofriends</h1>\r\n      <SearchBar searchChange={onSearchChange} />\r\n      <Scroll>\r\n        <ErrorBoundary>\r\n          <CardList robots={filteredRobots} />\r\n        </ErrorBoundary>\r\n      </Scroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}